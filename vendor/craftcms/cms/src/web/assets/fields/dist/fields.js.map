{"version":3,"file":"fields.js","mappings":"YAAA,IAAWA,EAGLC,EAHKD,EA2JRE,OAxJGD,EAAcE,QAAQC,KAAKC,OAAO,CACpCC,QAAS,KACTC,eAAgB,KAEhBC,KAAM,WAAY,WAChBC,KAAKH,QAAUN,EAAE,WACjBS,KAAKF,eAAiBE,KAAKH,QAAQI,KAAK,eACxCD,KAAKE,YAAYX,EAAE,gBAAiB,WAAY,eAEhD,IAAIY,EAAoBZ,EAAE,qBAEtBY,EAAkBC,SACND,EAAkBE,KAAK,WAE7BC,SAASC,eAAiB,SAACC,GAGjC,OAFajB,EAAEiB,GAAMH,KAAK,WAGxB,IAAK,SACH,EAAKI,sBACL,MAEF,IAAK,SACH,EAAKC,0BAQfC,YAAa,WAAY,WACnBC,EAAOZ,KAAKa,mBAAmB,IAEnC,GAAID,EAAM,CACR,IAAIP,EAAO,CACTO,KAAMA,GAGRE,MAAMC,kBACJ,oBACAV,GACA,SAACW,EAAUC,GACT,GAAmB,YAAfA,EACF,GAAID,EAASE,QACXC,SAASC,KAAON,MAAMO,OACpB,mBAAqBL,EAASM,MAAMC,SAEjC,GAAIP,EAASQ,OAAQ,CAC1B,IAAIA,EAAS,EAAKC,cAAcT,EAASQ,QACzCE,MACEZ,MAAMa,EAAE,MAAO,+BACb,OACAH,EAAOI,KAAK,YAGhBd,MAAMe,GAAGC,oBAQrBrB,oBAAqB,WAAY,WAC3BsB,EAAU/B,KAAKF,eAAekC,OAChCC,EAAUjC,KAAKa,mBAAmBkB,GAEpC,GAAIE,GAAWA,IAAYF,EAAS,CAClC,IAAI1B,EAAO,CACTkB,GAAIvB,KAAKF,eAAeO,KAAK,MAC7BO,KAAMqB,GAGRnB,MAAMC,kBACJ,oBACAV,GACA,SAACW,EAAUC,GACT,GAAmB,YAAfA,EACF,GAAID,EAASE,QACX,EAAKpB,eAAekC,KAAKhB,EAASM,MAAMV,MACxCE,MAAMe,GAAGK,cAAcpB,MAAMa,EAAE,MAAO,wBACjC,GAAIX,EAASQ,OAAQ,CAC1B,IAAIA,EAAS,EAAKC,cAAcT,EAASQ,QACzCE,MACEZ,MAAMa,EAAE,MAAO,+BACb,OACAH,EAAOI,KAAK,YAGhBd,MAAMe,GAAGC,oBAQrBjB,mBAAoB,SAAUkB,GAC5B,OAAOI,OACLrB,MAAMa,EAAE,MAAO,uCACfI,IAIJrB,oBAAqB,WACnB,GACE0B,QACEtB,MAAMa,EACJ,MACA,mEAGJ,CACA,IAAItB,EAAO,CACTkB,GAAIvB,KAAKF,eAAeO,KAAK,OAG/BS,MAAMC,kBACJ,sBACAV,GACA,SAACW,EAAUC,GACU,YAAfA,IACED,EAASE,QACXC,SAASC,KAAON,MAAMO,OAAO,mBAE7BP,MAAMe,GAAGC,qBAQrBL,cAAe,SAAUY,GACvB,IAAIb,EAAS,GAEb,IAAK,IAAIc,KAAaD,EACfA,EAAeE,eAAeD,KAInCd,EAASA,EAAOgB,OAAOH,EAAeC,KAGxC,OAAOd,KAIX9B,QAAQ+C,KAAKC,OAAM,WACjB5B,MAAMtB,YAAc,IAAIA,K","sources":["webpack:///./fields.js"],"sourcesContent":["(function ($) {\n  /** global: Craft */\n  /** global: Garnish */\n  var FieldsAdmin = Garnish.Base.extend({\n    $groups: null,\n    $selectedGroup: null,\n\n    init: function () {\n      this.$groups = $('#groups');\n      this.$selectedGroup = this.$groups.find('a.sel:first');\n      this.addListener($('#newgroupbtn'), 'activate', 'addNewGroup');\n\n      var $groupSettingsBtn = $('#groupsettingsbtn');\n\n      if ($groupSettingsBtn.length) {\n        var menuBtn = $groupSettingsBtn.data('menubtn');\n\n        menuBtn.settings.onOptionSelect = (elem) => {\n          var action = $(elem).data('action');\n\n          switch (action) {\n            case 'rename': {\n              this.renameSelectedGroup();\n              break;\n            }\n            case 'delete': {\n              this.deleteSelectedGroup();\n              break;\n            }\n          }\n        };\n      }\n    },\n\n    addNewGroup: function () {\n      var name = this.promptForGroupName('');\n\n      if (name) {\n        var data = {\n          name: name,\n        };\n\n        Craft.postActionRequest(\n          'fields/save-group',\n          data,\n          (response, textStatus) => {\n            if (textStatus === 'success') {\n              if (response.success) {\n                location.href = Craft.getUrl(\n                  'settings/fields/' + response.group.id\n                );\n              } else if (response.errors) {\n                var errors = this.flattenErrors(response.errors);\n                alert(\n                  Craft.t('app', 'Could not create the group:') +\n                    '\\n\\n' +\n                    errors.join('\\n')\n                );\n              } else {\n                Craft.cp.displayError();\n              }\n            }\n          }\n        );\n      }\n    },\n\n    renameSelectedGroup: function () {\n      var oldName = this.$selectedGroup.text(),\n        newName = this.promptForGroupName(oldName);\n\n      if (newName && newName !== oldName) {\n        var data = {\n          id: this.$selectedGroup.data('id'),\n          name: newName,\n        };\n\n        Craft.postActionRequest(\n          'fields/save-group',\n          data,\n          (response, textStatus) => {\n            if (textStatus === 'success') {\n              if (response.success) {\n                this.$selectedGroup.text(response.group.name);\n                Craft.cp.displayNotice(Craft.t('app', 'Group renamed.'));\n              } else if (response.errors) {\n                var errors = this.flattenErrors(response.errors);\n                alert(\n                  Craft.t('app', 'Could not rename the group:') +\n                    '\\n\\n' +\n                    errors.join('\\n')\n                );\n              } else {\n                Craft.cp.displayError();\n              }\n            }\n          }\n        );\n      }\n    },\n\n    promptForGroupName: function (oldName) {\n      return prompt(\n        Craft.t('app', 'What do you want to name the group?'),\n        oldName\n      );\n    },\n\n    deleteSelectedGroup: function () {\n      if (\n        confirm(\n          Craft.t(\n            'app',\n            'Are you sure you want to delete this group and all its fields?'\n          )\n        )\n      ) {\n        var data = {\n          id: this.$selectedGroup.data('id'),\n        };\n\n        Craft.postActionRequest(\n          'fields/delete-group',\n          data,\n          (response, textStatus) => {\n            if (textStatus === 'success') {\n              if (response.success) {\n                location.href = Craft.getUrl('settings/fields');\n              } else {\n                Craft.cp.displayError();\n              }\n            }\n          }\n        );\n      }\n    },\n\n    flattenErrors: function (responseErrors) {\n      var errors = [];\n\n      for (var attribute in responseErrors) {\n        if (!responseErrors.hasOwnProperty(attribute)) {\n          continue;\n        }\n\n        errors = errors.concat(responseErrors[attribute]);\n      }\n\n      return errors;\n    },\n  });\n\n  Garnish.$doc.ready(function () {\n    Craft.FieldsAdmin = new FieldsAdmin();\n  });\n})(jQuery);\n"],"names":["$","FieldsAdmin","jQuery","Garnish","Base","extend","$groups","$selectedGroup","init","this","find","addListener","$groupSettingsBtn","length","data","settings","onOptionSelect","elem","renameSelectedGroup","deleteSelectedGroup","addNewGroup","name","promptForGroupName","Craft","postActionRequest","response","textStatus","success","location","href","getUrl","group","id","errors","flattenErrors","alert","t","join","cp","displayError","oldName","text","newName","displayNotice","prompt","confirm","responseErrors","attribute","hasOwnProperty","concat","$doc","ready"],"sourceRoot":""}