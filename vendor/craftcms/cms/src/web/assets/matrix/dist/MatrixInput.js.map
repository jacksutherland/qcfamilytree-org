{"version":3,"file":"MatrixInput.js","mappings":"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","sources":["webpack:///./MatrixInput.js"],"sourcesContent":["(function ($) {\n  /** global: Craft */\n  /** global: Garnish */\n  /**\n   * Matrix input class\n   */\n  Craft.MatrixInput = Garnish.Base.extend(\n    {\n      id: null,\n      blockTypes: null,\n      blockTypesByHandle: null,\n      inputNamePrefix: null,\n      inputIdPrefix: null,\n\n      showingAddBlockMenu: false,\n      addBlockBtnGroupWidth: null,\n      addBlockBtnContainerWidth: null,\n\n      $container: null,\n      $blockContainer: null,\n      $addBlockBtnContainer: null,\n      $addBlockBtnGroup: null,\n      $addBlockBtnGroupBtns: null,\n      $statusMessage: null,\n\n      blockSort: null,\n      blockSelect: null,\n      totalNewBlocks: 0,\n\n      init: function (id, blockTypes, inputNamePrefix, settings) {\n        this.id = id;\n        this.blockTypes = blockTypes;\n        this.inputNamePrefix = inputNamePrefix;\n        this.inputIdPrefix = Craft.formatInputId(this.inputNamePrefix);\n\n        // see if settings was actually set to the maxBlocks value\n        if (typeof settings === 'number') {\n          settings = {maxBlocks: settings};\n        }\n        this.setSettings(settings, Craft.MatrixInput.defaults);\n\n        this.$container = $('#' + this.id);\n        this.$blockContainer = this.$container.children('.blocks');\n        this.$addBlockBtnContainer = this.$container.children('.buttons');\n        this.$addBlockBtnGroup =\n          this.$addBlockBtnContainer.children('.btngroup');\n        this.$addBlockBtnGroupBtns = this.$addBlockBtnGroup.children('.btn');\n        this.$addBlockMenuBtn = this.$addBlockBtnContainer.children('.menubtn');\n        this.$statusMessage = this.$container.find('[data-status-message]');\n\n        this.$container.data('matrix', this);\n\n        this.setNewBlockBtn();\n\n        this.blockTypesByHandle = {};\n\n        var i;\n\n        for (i = 0; i < this.blockTypes.length; i++) {\n          var blockType = this.blockTypes[i];\n          this.blockTypesByHandle[blockType.handle] = blockType;\n        }\n\n        var $blocks = this.$blockContainer.children(),\n          collapsedBlocks = Craft.MatrixInput.getCollapsedBlockIds();\n\n        this.blockSort = new Garnish.DragSort($blocks, {\n          handle: '> .actions > .move',\n          axis: 'y',\n          filter: () => {\n            // Only return all the selected items if the target item is selected\n            if (this.blockSort.$targetItem.hasClass('sel')) {\n              return this.blockSelect.getSelectedItems();\n            } else {\n              return this.blockSort.$targetItem;\n            }\n          },\n          collapseDraggees: true,\n          magnetStrength: 4,\n          helperLagBase: 1.5,\n          helperOpacity: 0.9,\n          onSortChange: () => {\n            this.blockSelect.resetItemOrder();\n          },\n        });\n\n        this.blockSelect = new Garnish.Select(this.$blockContainer, $blocks, {\n          multi: true,\n          vertical: true,\n          handle: '> .checkbox, > .titlebar',\n          checkboxMode: true,\n        });\n\n        for (i = 0; i < $blocks.length; i++) {\n          var $block = $($blocks[i]),\n            blockId = $block.data('id');\n\n          // Is this a new block?\n          var newMatch =\n            typeof blockId === 'string' && blockId.match(/new(\\d+)/);\n\n          if (newMatch && newMatch[1] > this.totalNewBlocks) {\n            this.totalNewBlocks = parseInt(newMatch[1]);\n          }\n\n          var block = new MatrixBlock(this, $block);\n\n          if (block.id && $.inArray('' + block.id, collapsedBlocks) !== -1) {\n            block.collapse();\n          }\n        }\n\n        this.addListener(this.$addBlockBtnGroupBtns, 'click', function (ev) {\n          var type = $(ev.target).data('type');\n          this.addBlock(type);\n        });\n\n        new Garnish.MenuBtn(this.$addBlockMenuBtn, {\n          onOptionSelect: (option) => {\n            this.addBlock($(option).data('type'));\n          },\n        });\n\n        this.updateAddBlockBtn();\n\n        this.addListener(this.$container, 'resize', 'setNewBlockBtn');\n        Garnish.$doc.ready(this.setNewBlockBtn.bind(this));\n\n        this.trigger('afterInit');\n      },\n\n      setNewBlockBtn: function () {\n        // Do we know what the button group width is yet?\n        if (!this.addBlockBtnGroupWidth) {\n          this.addBlockBtnGroupWidth = this.$addBlockBtnGroup.width();\n\n          if (!this.addBlockBtnGroupWidth) {\n            return;\n          }\n        }\n\n        // Only check if the container width has resized\n        if (\n          this.addBlockBtnContainerWidth !==\n          (this.addBlockBtnContainerWidth = this.$addBlockBtnContainer.width())\n        ) {\n          if (this.addBlockBtnGroupWidth > this.addBlockBtnContainerWidth) {\n            if (!this.showingAddBlockMenu) {\n              this.$addBlockBtnGroup.addClass('hidden');\n              this.$addBlockMenuBtn.removeClass('hidden');\n              this.showingAddBlockMenu = true;\n            }\n          } else {\n            if (this.showingAddBlockMenu) {\n              this.$addBlockMenuBtn.addClass('hidden');\n              this.$addBlockBtnGroup.removeClass('hidden');\n              this.showingAddBlockMenu = false;\n\n              // Because Safari is awesome\n              if (navigator.userAgent.indexOf('Safari') !== -1) {\n                Garnish.requestAnimationFrame(() => {\n                  this.$addBlockBtnGroup.css('opacity', 0.99);\n\n                  Garnish.requestAnimationFrame(() => {\n                    this.$addBlockBtnGroup.css('opacity', '');\n                  });\n                });\n              }\n            }\n          }\n        }\n      },\n\n      canAddMoreBlocks: function () {\n        return (\n          !this.maxBlocks ||\n          this.$blockContainer.children().length < this.maxBlocks\n        );\n      },\n\n      updateAddBlockBtn: function () {\n        var i, block;\n\n        if (this.canAddMoreBlocks()) {\n          this.$addBlockBtnGroup.removeClass('disabled');\n          this.$addBlockMenuBtn.removeClass('disabled');\n\n          this.$addBlockBtnGroupBtns.each(function () {\n            $(this).removeAttr('aria-disabled');\n          });\n\n          for (i = 0; i < this.blockSelect.$items.length; i++) {\n            block = this.blockSelect.$items.eq(i).data('block');\n\n            if (block) {\n              block.$actionMenu\n                .find('a[data-action=add]')\n                .parent()\n                .removeClass('disabled');\n              block.$actionMenu\n                .find('a[data-action=add]')\n                .removeAttr('aria-disabled');\n            }\n          }\n        } else {\n          this.$addBlockBtnGroup.addClass('disabled');\n          this.$addBlockMenuBtn.addClass('disabled');\n\n          this.$addBlockBtnGroupBtns.each(function () {\n            $(this).attr('aria-disabled', 'true');\n          });\n\n          for (i = 0; i < this.blockSelect.$items.length; i++) {\n            block = this.blockSelect.$items.eq(i).data('block');\n\n            if (block) {\n              block.$actionMenu\n                .find('a[data-action=add]')\n                .parent()\n                .addClass('disabled');\n              block.$actionMenu\n                .find('a[data-action=add]')\n                .attr('aria-disabled', 'true');\n            }\n          }\n        }\n      },\n\n      updateStatusMessage: function () {\n        this.$statusMessage.empty();\n        let message;\n\n        if (!this.canAddMoreBlocks()) {\n          message = Craft.t(\n            'app',\n            'Matrix block could not be added. Maximum number of blocks reached.'\n          );\n        }\n\n        setTimeout(() => {\n          this.$statusMessage.text(message);\n        }, 250);\n      },\n\n      addBlock: function (type, $insertBefore, autofocus) {\n        if (!this.canAddMoreBlocks()) {\n          this.updateStatusMessage();\n          return;\n        }\n\n        this.totalNewBlocks++;\n\n        var id = 'new' + this.totalNewBlocks;\n        const actionMenuId = `matrixblock-action-menu-${id}`;\n\n        var html = `\n                <div class=\"matrixblock\" data-id=\"${id}\" data-type=\"${type}\">\n                  <input type=\"hidden\" name=\"${\n                    this.inputNamePrefix\n                  }[sortOrder][]\" value=\"${id}\"/>\n                  <input type=\"hidden\" name=\"${\n                    this.inputNamePrefix\n                  }[blocks][${id}][type]\" value=\"${type}\"/>\n                  <input type=\"hidden\" name=\"${\n                    this.inputNamePrefix\n                  }[blocks][${id}][enabled]\" value=\"1\"/>\n                  <div class=\"titlebar\">\n                    <div class=\"blocktype\">${\n                      this.getBlockTypeByHandle(type).name\n                    }</div>\n                    <div class=\"preview\"></div>\n                  </div>\n                  <div class=\"checkbox\" title=\"${Craft.t(\n                    'app',\n                    'Select'\n                  )}\"></div>\n                  <div class=\"actions\">\n                    <div class=\"status off\" title=\"${Craft.t(\n                      'app',\n                      'Disabled'\n                    )}\"></div>\n                    <div>\n                      <button type=\"button\" class=\"btn settings icon menubtn\" title=\"${Craft.t(\n                        'app',\n                        'Actions'\n                      )}\" aria-controls=\"${actionMenuId}\" data-disclosure-trigger></button>\n                        <div id=\"${actionMenuId}\" class=\"menu menu--disclosure\">\n                         <ul class=\"padded\">\n                            <li><a data-icon=\"collapse\" data-action=\"collapse\" href=\"#\" aria-label=\"${Craft.t(\n                              'app',\n                              'Collapse'\n                            )}\" type=\"button\" role=\"button\">${Craft.t(\n          'app',\n          'Collapse'\n        )}</a></li>\n                            <li class=\"hidden\"><a data-icon=\"expand\" data-action=\"expand\" href=\"#\" aria-label=\"${Craft.t(\n                              'app',\n                              'Expand'\n                            )}\" type=\"button\" role=\"button\">${Craft.t(\n          'app',\n          'Expand'\n        )}</a></li>\n                            <li><a data-icon=\"disabled\" data-action=\"disable\" href=\"#\" aria-label=\"${Craft.t(\n                              'app',\n                              'Disable'\n                            )}\" type=\"button\" role=\"button\">${Craft.t(\n          'app',\n          'Disable'\n        )}</a></li>\n                            <li class=\"hidden\"><a data-icon=\"enabled\" data-action=\"enable\" href=\"#\" aria-label=\"${Craft.t(\n                              'app',\n                              'Enable'\n                            )}\" type=\"button\" role=\"button\">${Craft.t(\n          'app',\n          'Enable'\n        )}</a></li>\n                            <li><a data-icon=\"uarr\" data-action=\"moveUp\" href=\"#\" aria-label=\"${Craft.t(\n                              'app',\n                              'Move up'\n                            )}\" type=\"button\" role=\"button\">${Craft.t(\n          'app',\n          'Move up'\n        )}</a></li>\n                            <li><a data-icon=\"darr\" data-action=\"moveDown\" href=\"#\" aria-label=\"${Craft.t(\n                              'app',\n                              'Move down'\n                            )}\" type=\"button\" role=\"button\">${Craft.t(\n          'app',\n          'Move down'\n        )}</a></li>\n                          </ul>`;\n\n        if (!this.settings.staticBlocks) {\n          html += `\n                          <hr class=\"padded\"/>\n                          <ul class=\"padded\">\n                            <li><a class=\"error\" data-icon=\"remove\" data-action=\"delete\" href=\"#\" aria-label=\"${Craft.t(\n                              'app',\n                              'Delete'\n                            )}\" type=\"button\" role=\"button\">${Craft.t(\n            'app',\n            'Delete'\n          )}</a></li>\n                          </ul>\n                          <hr class=\"padded\"/>\n                          <ul class=\"padded\">`;\n\n          for (var i = 0; i < this.blockTypes.length; i++) {\n            var blockType = this.blockTypes[i];\n            html += `\n                            <li><a data-icon=\"plus\" data-action=\"add\" data-type=\"${\n                              blockType.handle\n                            }\" href=\"#\" aria-label=\"${Craft.t(\n              'app',\n              'Add {type} above',\n              {type: blockType.name}\n            )}\" type=\"button\" role=\"button\">${Craft.t(\n              'app',\n              'Add {type} above',\n              {type: blockType.name}\n            )}</a></li>`;\n          }\n\n          html += `\n                          </ul>`;\n        }\n\n        html += `\n                        </div>\n                      </div>\n                    <a class=\"move icon\" title=\"${Craft.t(\n                      'app',\n                      'Reorder'\n                    )}\" role=\"button\"></a>\n                  </div>\n                </div>`;\n\n        var $block = $(html);\n\n        // Pause the draft editor\n        if (window.draftEditor) {\n          window.draftEditor.pause();\n        }\n\n        if ($insertBefore) {\n          $block.insertBefore($insertBefore);\n        } else {\n          $block.appendTo(this.$blockContainer);\n        }\n\n        var $fieldsContainer = $('<div class=\"fields\"/>').appendTo($block),\n          bodyHtml = this.getParsedBlockHtml(\n            this.blockTypesByHandle[type].bodyHtml,\n            id\n          ),\n          footHtml = this.getParsedBlockHtml(\n            this.blockTypesByHandle[type].footHtml,\n            id\n          );\n\n        $(bodyHtml).appendTo($fieldsContainer);\n\n        this.trigger('blockAdded', {\n          $block: $block,\n        });\n\n        // Animate the block into position\n        $block.css(this.getHiddenBlockCss($block)).velocity(\n          {\n            opacity: 1,\n            'margin-bottom': 10,\n          },\n          'fast',\n          () => {\n            $block.css('margin-bottom', '');\n            Garnish.$bod.append(footHtml);\n            Craft.initUiElements($fieldsContainer);\n            new MatrixBlock(this, $block);\n            this.blockSort.addItems($block);\n            this.blockSelect.addItems($block);\n            this.updateAddBlockBtn();\n\n            Garnish.requestAnimationFrame(function () {\n              if (typeof autofocus === 'undefined' || autofocus) {\n                // Scroll to the block\n                Garnish.scrollContainerToElement($block);\n                // Focus on the first text input\n                $block.find('.text,[contenteditable]').first().trigger('focus');\n              }\n\n              // Resume the draft editor\n              if (window.draftEditor) {\n                window.draftEditor.resume();\n              }\n            });\n          }\n        );\n      },\n\n      getBlockTypeByHandle: function (handle) {\n        for (var i = 0; i < this.blockTypes.length; i++) {\n          if (this.blockTypes[i].handle === handle) {\n            return this.blockTypes[i];\n          }\n        }\n      },\n\n      collapseSelectedBlocks: function () {\n        this.callOnSelectedBlocks('collapse');\n      },\n\n      expandSelectedBlocks: function () {\n        this.callOnSelectedBlocks('expand');\n      },\n\n      disableSelectedBlocks: function () {\n        this.callOnSelectedBlocks('disable');\n      },\n\n      enableSelectedBlocks: function () {\n        this.callOnSelectedBlocks('enable');\n      },\n\n      deleteSelectedBlocks: function () {\n        this.callOnSelectedBlocks('selfDestruct');\n      },\n\n      callOnSelectedBlocks: function (fn) {\n        for (var i = 0; i < this.blockSelect.$selectedItems.length; i++) {\n          this.blockSelect.$selectedItems.eq(i).data('block')[fn]();\n        }\n      },\n\n      getHiddenBlockCss: function ($block) {\n        return {\n          opacity: 0,\n          marginBottom: -$block.outerHeight(),\n        };\n      },\n\n      getParsedBlockHtml: function (html, id) {\n        if (typeof html === 'string') {\n          return html.replace(\n            new RegExp(`__BLOCK_${this.settings.placeholderKey}__`, 'g'),\n            id\n          );\n        } else {\n          return '';\n        }\n      },\n\n      get maxBlocks() {\n        return this.settings.maxBlocks;\n      },\n    },\n    {\n      defaults: {\n        placeholderKey: null,\n        maxBlocks: null,\n        staticBlocks: false,\n      },\n\n      collapsedBlockStorageKey:\n        'Craft-' + Craft.systemUid + '.MatrixInput.collapsedBlocks',\n\n      getCollapsedBlockIds: function () {\n        if (\n          typeof localStorage[Craft.MatrixInput.collapsedBlockStorageKey] ===\n          'string'\n        ) {\n          return Craft.filterArray(\n            localStorage[Craft.MatrixInput.collapsedBlockStorageKey].split(',')\n          );\n        } else {\n          return [];\n        }\n      },\n\n      setCollapsedBlockIds: function (ids) {\n        localStorage[Craft.MatrixInput.collapsedBlockStorageKey] =\n          ids.join(',');\n      },\n\n      rememberCollapsedBlockId: function (id) {\n        if (typeof Storage !== 'undefined') {\n          var collapsedBlocks = Craft.MatrixInput.getCollapsedBlockIds();\n\n          if ($.inArray('' + id, collapsedBlocks) === -1) {\n            collapsedBlocks.push(id);\n            Craft.MatrixInput.setCollapsedBlockIds(collapsedBlocks);\n          }\n        }\n      },\n\n      forgetCollapsedBlockId: function (id) {\n        if (typeof Storage !== 'undefined') {\n          var collapsedBlocks = Craft.MatrixInput.getCollapsedBlockIds(),\n            collapsedBlocksIndex = $.inArray('' + id, collapsedBlocks);\n\n          if (collapsedBlocksIndex !== -1) {\n            collapsedBlocks.splice(collapsedBlocksIndex, 1);\n            Craft.MatrixInput.setCollapsedBlockIds(collapsedBlocks);\n          }\n        }\n      },\n    }\n  );\n\n  var MatrixBlock = Garnish.Base.extend({\n    matrix: null,\n    $container: null,\n    $titlebar: null,\n    $fieldsContainer: null,\n    $previewContainer: null,\n    $actionMenu: null,\n    $collapsedInput: null,\n\n    actionDisclosure: null,\n\n    isNew: null,\n    id: null,\n\n    collapsed: false,\n\n    init: function (matrix, $container) {\n      this.matrix = matrix;\n      this.$container = $container;\n      this.$titlebar = $container.children('.titlebar');\n      this.$previewContainer = this.$titlebar.children('.preview');\n      this.$fieldsContainer = $container.children('.fields');\n\n      this.$container.data('block', this);\n\n      this.id = this.$container.data('id');\n      this.isNew =\n        !this.id ||\n        (typeof this.id === 'string' && this.id.substr(0, 3) === 'new');\n\n      const $actionMenuBtn = this.$container.find(\n        '> .actions [data-disclosure-trigger]'\n      );\n      const actionDisclosure =\n        $actionMenuBtn.data('trigger') ||\n        new Garnish.DisclosureMenu($actionMenuBtn);\n\n      this.$actionMenu = actionDisclosure.$container;\n      this.actionDisclosure = actionDisclosure;\n\n      actionDisclosure.on('show', () => {\n        this.$container.addClass('active');\n        if (this.$container.prev('.matrixblock').length) {\n          this.$actionMenu\n            .find('a[data-action=moveUp]:first')\n            .parent()\n            .removeClass('hidden');\n        } else {\n          this.$actionMenu\n            .find('a[data-action=moveUp]:first')\n            .parent()\n            .addClass('hidden');\n        }\n        if (this.$container.next('.matrixblock').length) {\n          this.$actionMenu\n            .find('a[data-action=moveDown]:first')\n            .parent()\n            .removeClass('hidden');\n        } else {\n          this.$actionMenu\n            .find('a[data-action=moveDown]:first')\n            .parent()\n            .addClass('hidden');\n        }\n      });\n\n      actionDisclosure.on('hide', () => {\n        this.$container.removeClass('active');\n      });\n\n      this.$actionMenuOptions = this.$actionMenu.find('a[data-action]');\n\n      this.addListener(\n        this.$actionMenuOptions,\n        'click',\n        this.handleActionClick\n      );\n      this.addListener(\n        this.$actionMenuOptions,\n        'keydown',\n        this.handleActionKeydown\n      );\n\n      // Was this block already collapsed?\n      if (Garnish.hasAttr(this.$container, 'data-collapsed')) {\n        this.collapse();\n      }\n\n      this._handleTitleBarClick = function (ev) {\n        ev.preventDefault();\n        this.toggle();\n      };\n\n      this.addListener(this.$titlebar, 'doubletap', this._handleTitleBarClick);\n    },\n\n    toggle: function () {\n      if (this.collapsed) {\n        this.expand();\n      } else {\n        this.collapse(true);\n      }\n    },\n\n    collapse: function (animate) {\n      if (this.collapsed) {\n        return;\n      }\n\n      this.$container.addClass('collapsed');\n\n      var previewHtml = '',\n        $fields = this.$fieldsContainer.children().children();\n\n      for (var i = 0; i < $fields.length; i++) {\n        var $field = $($fields[i]),\n          $inputs = $field\n            .children('.input')\n            .find('select,input[type!=\"hidden\"],textarea,.label'),\n          inputPreviewText = '';\n\n        for (var j = 0; j < $inputs.length; j++) {\n          var $input = $($inputs[j]),\n            value;\n\n          if ($input.hasClass('label')) {\n            var $maybeLightswitchContainer = $input.parent().parent();\n\n            if (\n              $maybeLightswitchContainer.hasClass('lightswitch') &&\n              (($maybeLightswitchContainer.hasClass('on') &&\n                $input.hasClass('off')) ||\n                (!$maybeLightswitchContainer.hasClass('on') &&\n                  $input.hasClass('on')))\n            ) {\n              continue;\n            }\n\n            value = $input.text();\n          } else {\n            value = Craft.getText(this._inputPreviewText($input));\n          }\n\n          if (value instanceof Array) {\n            value = value.join(', ');\n          }\n\n          if (value) {\n            value = Craft.trim(Craft.escapeHtml(value));\n\n            if (value) {\n              if (inputPreviewText) {\n                inputPreviewText += ', ';\n              }\n\n              inputPreviewText += value;\n            }\n          }\n        }\n\n        if (inputPreviewText) {\n          previewHtml +=\n            (previewHtml ? ' <span>|</span> ' : '') + inputPreviewText;\n        }\n      }\n\n      this.$previewContainer.html(previewHtml);\n\n      this.$fieldsContainer.velocity('stop');\n      this.$container.velocity('stop');\n\n      if (animate) {\n        this.$fieldsContainer.velocity('fadeOut', {duration: 'fast'});\n        this.$container.velocity({height: 16}, 'fast');\n      } else {\n        this.$previewContainer.show();\n        this.$fieldsContainer.hide();\n        this.$container.css({height: 16});\n      }\n\n      setTimeout(() => {\n        this.$actionMenu\n          .find('a[data-action=collapse]:first')\n          .parent()\n          .addClass('hidden');\n        this.$actionMenu\n          .find('a[data-action=expand]:first')\n          .parent()\n          .removeClass('hidden');\n      }, 200);\n\n      // Remember that?\n      if (!this.isNew) {\n        Craft.MatrixInput.rememberCollapsedBlockId(this.id);\n      } else {\n        if (!this.$collapsedInput) {\n          this.$collapsedInput = $(\n            '<input type=\"hidden\" name=\"' +\n              this.matrix.inputNamePrefix +\n              '[blocks][' +\n              this.id +\n              '][collapsed]\" value=\"1\"/>'\n          ).appendTo(this.$container);\n        } else {\n          this.$collapsedInput.val('1');\n        }\n      }\n\n      this.collapsed = true;\n    },\n\n    _inputPreviewText: function ($input) {\n      if ($input.is('select,multiselect')) {\n        const labels = [];\n        const $options = $input.find('option:selected');\n        for (let k = 0; k < $options.length; k++) {\n          labels.push($options.eq(k).text());\n        }\n        return labels;\n      }\n\n      if (\n        $input.is('input[type=\"checkbox\"]:checked,input[type=\"radio\"]:checked')\n      ) {\n        const id = $input.attr('id');\n        const $label = $(`label[for=\"${id}\"]`);\n        if ($label.length) {\n          return $label.text();\n        }\n      }\n\n      return Garnish.getInputPostVal($input);\n    },\n\n    expand: function () {\n      if (!this.collapsed) {\n        return;\n      }\n\n      this.$container.removeClass('collapsed');\n\n      this.$fieldsContainer.velocity('stop');\n      this.$container.velocity('stop');\n\n      var collapsedContainerHeight = this.$container.height();\n      this.$container.height('auto');\n      this.$fieldsContainer.show();\n      var expandedContainerHeight = this.$container.height();\n      var displayValue = this.$fieldsContainer.css('display') || 'block';\n      this.$container.height(collapsedContainerHeight);\n      this.$fieldsContainer\n        .hide()\n        .velocity('fadeIn', {duration: 'fast', display: displayValue});\n      this.$container.velocity(\n        {height: expandedContainerHeight},\n        'fast',\n        () => {\n          this.$previewContainer.html('');\n          this.$container.height('auto');\n        }\n      );\n\n      setTimeout(() => {\n        this.$actionMenu\n          .find('a[data-action=collapse]:first')\n          .parent()\n          .removeClass('hidden');\n        this.$actionMenu\n          .find('a[data-action=expand]:first')\n          .parent()\n          .addClass('hidden');\n      }, 200);\n\n      // Remember that?\n      if (!this.isNew && typeof Storage !== 'undefined') {\n        var collapsedBlocks = Craft.MatrixInput.getCollapsedBlockIds(),\n          collapsedBlocksIndex = $.inArray('' + this.id, collapsedBlocks);\n\n        if (collapsedBlocksIndex !== -1) {\n          collapsedBlocks.splice(collapsedBlocksIndex, 1);\n          Craft.MatrixInput.setCollapsedBlockIds(collapsedBlocks);\n        }\n      }\n\n      if (!this.isNew) {\n        Craft.MatrixInput.forgetCollapsedBlockId(this.id);\n      } else if (this.$collapsedInput) {\n        this.$collapsedInput.val('');\n      }\n\n      this.collapsed = false;\n    },\n\n    disable: function () {\n      this.$container.children('input[name$=\"[enabled]\"]:first').val('');\n      this.$container.addClass('disabled');\n\n      setTimeout(() => {\n        this.$actionMenu\n          .find('a[data-action=disable]:first')\n          .parent()\n          .addClass('hidden');\n        this.$actionMenu\n          .find('a[data-action=enable]:first')\n          .parent()\n          .removeClass('hidden');\n      }, 200);\n\n      this.collapse(true);\n    },\n\n    enable: function () {\n      this.$container.children('input[name$=\"[enabled]\"]:first').val('1');\n      this.$container.removeClass('disabled');\n\n      setTimeout(() => {\n        this.$actionMenu\n          .find('a[data-action=disable]:first')\n          .parent()\n          .removeClass('hidden');\n        this.$actionMenu\n          .find('a[data-action=enable]:first')\n          .parent()\n          .addClass('hidden');\n      }, 200);\n    },\n\n    moveUp: function () {\n      let $prev = this.$container.prev('.matrixblock');\n      if ($prev.length) {\n        this.$container.insertBefore($prev);\n        this.matrix.blockSelect.resetItemOrder();\n      }\n    },\n\n    moveDown: function () {\n      let $next = this.$container.next('.matrixblock');\n      if ($next.length) {\n        this.$container.insertAfter($next);\n        this.matrix.blockSelect.resetItemOrder();\n      }\n    },\n\n    handleActionClick: function (event) {\n      event.preventDefault();\n      this.onActionSelect(event.target);\n    },\n\n    handleActionKeydown: function (event) {\n      const keyCode = event.keyCode;\n\n      if (keyCode !== Garnish.SPACE_KEY) return;\n\n      event.preventDefault();\n      this.onActionSelect(event.target);\n    },\n\n    onActionSelect: function (option) {\n      const batchAction =\n          this.matrix.blockSelect.totalSelected > 1 &&\n          this.matrix.blockSelect.isSelected(this.$container),\n        $option = $(option);\n\n      switch ($option.data('action')) {\n        case 'collapse': {\n          if (batchAction) {\n            this.matrix.collapseSelectedBlocks();\n          } else {\n            this.collapse(true);\n          }\n\n          break;\n        }\n\n        case 'expand': {\n          if (batchAction) {\n            this.matrix.expandSelectedBlocks();\n          } else {\n            this.expand();\n          }\n\n          break;\n        }\n\n        case 'disable': {\n          if (batchAction) {\n            this.matrix.disableSelectedBlocks();\n          } else {\n            this.disable();\n          }\n\n          break;\n        }\n\n        case 'enable': {\n          if (batchAction) {\n            this.matrix.enableSelectedBlocks();\n          } else {\n            this.enable();\n            this.expand();\n          }\n\n          break;\n        }\n\n        case 'moveUp': {\n          this.moveUp();\n          break;\n        }\n\n        case 'moveDown': {\n          this.moveDown();\n          break;\n        }\n\n        case 'add': {\n          var type = $option.data('type');\n          this.matrix.addBlock(type, this.$container);\n          break;\n        }\n\n        case 'delete': {\n          if (batchAction) {\n            if (\n              confirm(\n                Craft.t(\n                  'app',\n                  'Are you sure you want to delete the selected blocks?'\n                )\n              )\n            ) {\n              this.matrix.deleteSelectedBlocks();\n            }\n          } else {\n            this.selfDestruct();\n          }\n\n          break;\n        }\n      }\n\n      this.actionDisclosure.hide();\n    },\n\n    selfDestruct: function () {\n      // Remove any inputs from the form data\n      $('[name]', this.$container).removeAttr('name');\n\n      this.$container.velocity(\n        this.matrix.getHiddenBlockCss(this.$container),\n        'fast',\n        () => {\n          this.$container.remove();\n          this.matrix.updateAddBlockBtn();\n\n          this.matrix.trigger('blockDeleted', {\n            $block: this.$container,\n          });\n        }\n      );\n    },\n  });\n})(jQuery);\n"],"names":["$","Craft","MatrixInput","Garnish","Base","extend","id","blockTypes","blockTypesByHandle","inputNamePrefix","inputIdPrefix","showingAddBlockMenu","addBlockBtnGroupWidth","addBlockBtnContainerWidth","$container","$blockContainer","$addBlockBtnContainer","$addBlockBtnGroup","$addBlockBtnGroupBtns","$statusMessage","blockSort","blockSelect","totalNewBlocks","init","settings","i","this","formatInputId","maxBlocks","setSettings","defaults","children","$addBlockMenuBtn","find","data","setNewBlockBtn","length","blockType","handle","$blocks","collapsedBlocks","getCollapsedBlockIds","DragSort","axis","filter","$targetItem","hasClass","getSelectedItems","collapseDraggees","magnetStrength","helperLagBase","helperOpacity","onSortChange","resetItemOrder","Select","multi","vertical","checkboxMode","$block","blockId","newMatch","match","parseInt","block","MatrixBlock","inArray","collapse","addListener","ev","type","target","addBlock","MenuBtn","onOptionSelect","option","updateAddBlockBtn","$doc","ready","bind","trigger","width","addClass","removeClass","navigator","userAgent","indexOf","requestAnimationFrame","css","canAddMoreBlocks","each","removeAttr","$items","eq","$actionMenu","parent","attr","updateStatusMessage","message","empty","t","setTimeout","text","$insertBefore","autofocus","actionMenuId","html","getBlockTypeByHandle","name","staticBlocks","window","draftEditor","pause","insertBefore","appendTo","$fieldsContainer","bodyHtml","getParsedBlockHtml","footHtml","getHiddenBlockCss","velocity","opacity","$bod","append","initUiElements","addItems","scrollContainerToElement","first","resume","collapseSelectedBlocks","callOnSelectedBlocks","expandSelectedBlocks","disableSelectedBlocks","enableSelectedBlocks","deleteSelectedBlocks","fn","$selectedItems","marginBottom","outerHeight","replace","RegExp","placeholderKey","collapsedBlockStorageKey","systemUid","localStorage","filterArray","split","setCollapsedBlockIds","ids","join","rememberCollapsedBlockId","Storage","push","forgetCollapsedBlockId","collapsedBlocksIndex","splice","matrix","$titlebar","$previewContainer","$collapsedInput","actionDisclosure","isNew","collapsed","substr","$actionMenuBtn","DisclosureMenu","on","prev","next","$actionMenuOptions","handleActionClick","handleActionKeydown","hasAttr","_handleTitleBarClick","preventDefault","toggle","expand","animate","previewHtml","$fields","$inputs","inputPreviewText","j","value","$input","$maybeLightswitchContainer","getText","_inputPreviewText","Array","trim","escapeHtml","duration","height","show","hide","val","is","labels","$options","k","$label","getInputPostVal","collapsedContainerHeight","expandedContainerHeight","displayValue","display","disable","enable","moveUp","$prev","moveDown","$next","insertAfter","event","onActionSelect","keyCode","SPACE_KEY","batchAction","totalSelected","isSelected","$option","confirm","selfDestruct","remove","jQuery"],"sourceRoot":""}